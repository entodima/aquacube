#include "CTBot.h"
#include <NTPClient.h>
#include <WiFiUdp.h>
#include ".env.h"

WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP);
CTBot cubeBot;

CTBotReplyKeyboard cubeOnReplyKeyboard;
CTBotReplyKeyboard cubeOffReplyKeyboard;
CTBotReplyKeyboard cubeUpdateReplyKeyboard;

bool lampIsEnabled;

#define LIGHT_ON_CALLBACK  "lightON" 
#define LIGHT_OFF_CALLBACK  "lightOFF" 

void setup() {
	Serial.begin(115200);

	cubeBot.wifiConnect(ssid, pass);
	cubeBot.setTelegramToken(token);

	cubeOnReplyKeyboard.addButton("üí° –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç");
	cubeOnReplyKeyboard.addRow();
	cubeOnReplyKeyboard.addButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å");

	cubeOffReplyKeyboard.addButton("üåÉ –í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç");
	cubeOffReplyKeyboard.addRow();
	cubeOffReplyKeyboard.addButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å");

	cubeUpdateReplyKeyboard.addButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å");

	pinMode(relay, OUTPUT);
	digitalWrite(relay, LOW);
	lampIsEnabled = false;

	timeClient.setTimeOffset(10800);
	timeClient.update();
 	//Serial.println(timeClient.getFormattedTime());


	for (size_t i = 0; i < adminsCount; i++) {
		cubeBot.sendMessage(users[i], "üëã Aqua Cube –∑–∞–ø—É—â–µ–Ω!\nüåÉ –°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω", cubeOnReplyKeyboard);
	}
}


void loop() {
	TBMessage msg;
	bool isUserFinded = false;

	if (cubeBot.getNewMessage(msg)) { // –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
		for(size_t i = 0; i < sizeof(users)/sizeof(int); i++) {	// –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–ª–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
			if (msg.sender.id == users[i]) {					
				if (msg.messageType == CTBotMessageText) {		// —ç—Ç–æ —Ç–µ–∫—Å—Ç?
					if (msg.text == "üí° –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç") {		// –∫–æ–º–∞–Ω–¥–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Å–≤–µ—Ç–∞
						digitalWrite(relay, HIGH);        		
						lampIsEnabled = true;
						cubeBot.sendMessage(msg.sender.id, "üí° –°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω", cubeOffReplyKeyboard);  	
					} else if (msg.text == "üåÉ –í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç") {	// –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Å–≤–µ—Ç–∞
						digitalWrite(relay, LOW);        
						lampIsEnabled = false;
						cubeBot.sendMessage(msg.sender.id, "üåÉ –°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω", cubeOnReplyKeyboard);  	
					} else if (msg.text = "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å") {	// –∫–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ª–∞–º–ø—ã
						if (lampIsEnabled) {				
							cubeBot.sendMessage(msg.sender.id, "üí° C–µ–π—á–∞—Å c–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω", cubeOffReplyKeyboard);
						} else {
							cubeBot.sendMessage(msg.sender.id, "üåÉ C–µ–π—á–∞—Å c–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω", cubeOnReplyKeyboard);
						}
					} else {										// –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ –∫–æ–º–∞–Ω–¥—É, –∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
						cubeBot.sendMessage(msg.sender.id, "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –Ω–∏–∂–µ");	
						if (lampIsEnabled) {
							cubeBot.sendMessage(msg.sender.id, "üí° C–µ–π—á–∞—Å c–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω", cubeOffReplyKeyboard);
						} else	{
							cubeBot.sendMessage(msg.sender.id, "üåÉ C–µ–π—á–∞—Å c–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω", cubeOnReplyKeyboard);
						}
					}
				}

				isUserFinded = true;
				break;
			}
		}

		if(!isUserFinded) {
			String reply = (String)"–¢–µ–±—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤. ChatID: " + msg.sender.id;
			cubeBot.sendMessage(msg.sender.id, reply);
		}
		
	}
	
	delay(50);
}
